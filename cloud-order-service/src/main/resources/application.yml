server:
  port: 8000


spring:
  application:
    name: cloud-order-service
  profiles:
    active: dev
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        service-name: ${spring.application.name}
    openfeign:
      client:
        config:
          default:
            connect-timeout: 3000
            read-timeout: 3000
          cloud-payment-service:
            connect-timeout: 2000
            read-timeout: 2000
      httpclient:
        hc5:
          enabled: true
      compression:
        request:
          enabled: true
          min-request-size: 2048
        response:
          enabled: true
      circuitbreaker:
        enabled: true
        group:
          enabled: true
#    loadbalancer:
#      retry:
#        enabled: true
#        max-retries-on-same-service-instance: 2
logging:
  level:
    com:
      cl:
        common:
          api:
            PayApi: debug
#        max-retries-on-next-service-instance: 1

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        failureRateThreshold: 50
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException
        ignore-exceptions:
          -
    instances:
      cloud-payment-service:
        baseConfig: default

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: health,circuitbreakers
  health:
    circuitbreakers:
      enabled: true